bank<- read.csv(file.choose())

colnames(bank)[which(names(bank) == "y")] <- "deposit"
View(bank)

## SLR Model
reg<- lm( deposit~., data = bank)
pred<- predict(reg,bank)
pred

##Logistic Model
reg_log<- glm(deposit~., data = bank, family = "binomial")
summary(reg_log)

exp(coef(reg_log))
prob<- predict(reg_log,bank,type="response")
prob

##confusion matrix wid 0.5 threshold value
confusion <- table(prob>0.5,bank$deposit)
confusion

## Accuracy
accuracy<- sum(diag(confusion))/sum(confusion)
accuracy   ### 90% 

pred_values<- NULL
yes_no<- NULL

pred_values<- ifelse(prob>=0.5,"1","0")
yes_no<- ifelse(prob>=0.5,"Yes","No")
View(bank)

##Creating New Column to store above values
bank[,"prob"] <-prob
bank[,"pred_values"] <-pred_values
bank[,"yes_no"] <-yes_no

View(bank)
View(bank[,c(17:20)])

table(bank$deposit,bank$pred_values)

#plot ROCR CURVE used to findout betterness of logistic equation
#install.packages("ROCR")
library(ROCR)

rocrpred<- prediction(prob,bank$deposit)
rocrperf<- performance(rocrpred,'tpr','fpr')

str(rocrperf)

plot(rocrperf,colorize=T,text.adj=c(-0.2,1.7))
# More area under the ROC Curve better is the logistic regression model obtained

## Getting threshold value along with true positive and false positive rates in a data frame 
rocr_cutoff <- data.frame(cut_off = rocrperf@alpha.values[[1]],fpr=rocrperf@x.values,tpr=rocrperf@y.values)
colnames(rocr_cutoff) <- c("cut_off","FPR","TPR")
View(rocr_cutoff)

install.packages("dplyr")
library(dplyr)
rocr_cutoff$cut_off <- round(rocr_cutoff$cut_off,10)

# Sorting data frame w.r.t tpr in decreasing order 
rocr_cutoff <- arrange(rocr_cutoff,desc(TPR))
View(rocr_cutoff)
